{"remainingRequest":"/home/pkgship/web-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pkgship/web-ui/src/views/home/depend-info.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pkgship/web-ui/src/views/home/depend-info.vue","mtime":1649919013041},{"path":"/home/pkgship/web-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637741922141},{"path":"/home/pkgship/web-ui/node_modules/babel-loader/lib/index.js","mtime":1639451278832},{"path":"/home/pkgship/web-ui/node_modules/cache-loader/dist/cjs.js","mtime":1637741922141},{"path":"/home/pkgship/web-ui/node_modules/vue-loader/lib/index.js","mtime":1639451297438}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["depend-info.vue"],"names":[],"mappingsfile":"depend-info.vue","sourceRoot":"src/views/home","sourcesContent":["<template>\n    <div class=\"depend\" v-loading=\"loading\">\n        <div class=\"depend-type\">\n            <span class=\"h5-type\">Type</span>\n            <div class=\"type-btns\">\n                <el-tooltip content=\"Query the installation dependencies of the binary package\" placement=\"top\" effect=\"light\">\n                   <button :class=\"{'active': currentButton === 'Install'}\" @click=\"clickButton($event)\">Install Depend</button>\n                </el-tooltip>\n                <el-tooltip content=\"Query the build dependencies of the source code package\" placement=\"top\" effect=\"light\">\n                   <button :class=\"{'active': currentButton === 'Build'}\" @click=\"clickButton($event)\">Build Depend</button>\n                </el-tooltip>\n                <el-tooltip content=\"Query all dependencies of the binary package or source code package,including the installation and build dependencies\" placement=\"top\" effect=\"light\">\n                   <button :class=\"{'active': currentButton === 'Self'}\" @click=\"clickButton($event)\">Self Depend</button>\n                </el-tooltip>\n                <el-tooltip content=\"Query dependents of the binary package or source code package\" placement=\"top\" effect=\"light\">\n                   <button :class=\"{'active': currentButton === 'Bedepend'}\" @click=\"clickButton($event)\">Bedepend</button>\n                </el-tooltip>\n            </div>\n            <div class=\"self-checkBox\" :class=\"{'show': currentButton === 'Self'}\">\n                <template>\n                    <el-checkbox-group v-model=\"checkList\">\n                        <el-checkbox label=\"source\" @change=\"sourceChange\"></el-checkbox>\n                        <el-tooltip class=\"checked-explain\" effect=\"light\" :content=\"sourceMsg\" placement=\"top\">\n                           <img src=\"@/assets/images/question.svg\" alt=\"\">\n                        </el-tooltip>\n                        <el-checkbox label=\"Self-build\" @change=\"selfChange\"></el-checkbox>\n                        <el-tooltip class=\"checked-explain\" effect=\"light\" \n                        :content=\"selfMsg\" \n                        placement=\"top\">\n                           <img src=\"@/assets/images/question.svg\" alt=\"\">\n                        </el-tooltip>\n                        <el-checkbox label=\"with-subpack\" @change=\"withChange\"></el-checkbox>\n                        <el-tooltip style=\"position: relative;top: 2px;left: 3px;\" effect=\"light\" \n                        :content=\"withMsg\" \n                        placement=\"top\">\n                           <img src=\"@/assets/images/question.svg\" alt=\"\">\n                        </el-tooltip>\n                    </el-checkbox-group>\n                </template>\n            </div>\n            <div class=\"be-select\" :class=\"{'show': currentButton === 'Bedepend'}\">\n                <template>\n                    <el-select class=\"type-select\" v-model=\"typeName\" clearable>\n                        <el-option v-for=\"(item, index) in productV\" :key=\"index\"\n                                   :label=\"item\"\n                                   :value=\"item\">\n                        </el-option>\n                    </el-select>\n                    <el-tooltip style=\"position: relative;top: 3px;left: 3px;\" effect=\"light\" \n                        content=\"Repository to be searched.Only one repository can be selected\" \n                        placement=\"top\">\n                           <img src=\"@/assets/images/question.svg\" alt=\"\">\n                    </el-tooltip>\n                    <el-checkbox-group v-model=\"typeList\" class=\"type-radio\">\n                        <el-checkbox label=\"with-subpack\" @change=\"subChange\"></el-checkbox>\n                        <el-tooltip style=\"position: relative;top: 3px;left: 3px;\" effect=\"light\" \n                        :content=\"subMsg\" \n                        placement=\"top\">\n                           <img src=\"@/assets/images/question.svg\" alt=\"\">\n                        </el-tooltip>\n                    </el-checkbox-group>\n                </template>\n            </div>\n            <div class=\"be-select\" :class=\"{'show': currentButton === 'Install' || currentButton === 'Build'}\">\n                <template>\n                    <span>Level: </span>\n                    <el-tooltip class=\"item\" effect=\"light\" content=\"Depth of the dependencies to be searched.All indicates that all dependencies are queried\" placement=\"top\">\n                        <img src=\"@/assets/images/question.svg\" alt=\"\">\n                    </el-tooltip>\n                    <el-select class=\"type-select\" v-model=\"typeLevel\">\n                        <el-option v-for=\"(item, index) in levelList\" :key=\"index\"\n                                   :label=\"item\"\n                                   :value=\"item\">\n                        </el-option>\n                    </el-select>\n                </template>\n            </div>\n        </div>\n        <div class=\"depend-search\">\n            <el-form\n                :inline=\"true\"\n                class=\"form\">\n                <el-form-item label=\"Search\" class=\"searching\">\n                    <el-tooltip class=\"tool-tips\" content=\"The package name is case-sensitive\" placement=\"bottom\" effect=\"light\">\n                        <el-button><img src=\"@/assets/images/question.svg\" alt=\"\"></el-button>\n                    </el-tooltip>\n                    <el-input\n                        v-model=\"searchName\"\n                        class=\"pc-search\"\n                        @keyup.enter.native=\"searchEvent\"\n                        :placeholder=\"searchTitle\">\n                        <i slot=\"suffix\" class=\"icon-search\" @click=\"initData\"></i>\n                    </el-input>\n                </el-form-item>\n                <el-form-item class=\"mobile-search\">\n                    <el-input\n                        v-model=\"searchName\"\n                        class=\"mobile-search\"\n                        placeholder=\"Search\">\n                        <i slot=\"suffix\" class=\"icon-search\"  @click=\"initData\"></i>\n                    </el-input>\n                </el-form-item>\n            </el-form>\n            <div class=\"be-select source\" :class=\"{'show': currentButton === 'Bedepend'}\">\n                <template>\n                    <el-select class=\"type-select\" v-model=\"searchType\" clearable>\n                        <el-option v-for=\"(item, index) in searchBe\" :key=\"index\"\n                                   :label=\"item\"\n                                   :value=\"item\">\n                        </el-option>\n                    </el-select>\n                    <el-tooltip style=\"position: relative;top: 3px;left: 3px;\" effect=\"light\" \n                        content=\"install indicates that the installation dependents of the binary package are queried,and build indicates that the build dependents of the source code package are quired\" \n                        placement=\"top\">\n                           <img src=\"@/assets/images/question.svg\" alt=\"\">\n                    </el-tooltip>\n                    <el-checkbox-group v-model=\"searchSource\" class=\"type-radio\">\n                        <el-checkbox label=\"source\" @change=\"sourceChange2\"></el-checkbox>\n                        <el-tooltip style=\"position: relative;top: 3px;left: 3px;\" effect=\"light\" \n                        :content=\"sourceMsg2\" \n                        placement=\"top\">\n                           <img src=\"@/assets/images/question.svg\" alt=\"\">\n                        </el-tooltip>\n                    </el-checkbox-group>\n                </template>\n            </div>\n        </div>\n        <div class=\"click-transfer\" v-if=\"currentButton !== 'Bedepend'\">\n            <p>\n                Search Priority:\n                <span ref=\"transTitle\"></span>\n                ,\n                <el-button class=\"click-btn\" type=\"text\" @click=\"dialogVisible = true\">click here</el-button>\n                to change.\n            </p>\n            <el-tooltip class=\"bottom-explain\" effect=\"light\" content=\"Repository to be searched\" placement=\"top\">\n                        <img src=\"@/assets/images/question.svg\" alt=\"\">\n            </el-tooltip>\n            <el-dialog\n                title=\"Set Search Priority\"\n                :visible.sync=\"dialogVisible\"\n                width=\"60%\"\n                center>\n                <template>\n                  <el-scrollbar>\n                    <el-transfer\n                        :data=\"washTableData(transData)\"\n                        :props=\"{key: 'id',label: 'fileName'}\"\n                        :titles=\"['Select from Here', 'Set in Here']\"\n                        class=\"transfer-box\"\n                        target-order=\"push\"\n                        v-model=\"selectedData\"\n                        :right-default-checked=\"defaultVersion\"\n                    ></el-transfer>\n                  </el-scrollbar>\n                </template>\n                <span slot=\"footer\" class=\"dialog-footer\">\n                    <el-button type=\"primary\" @click=\"transSelect\">OK</el-button>\n                    <el-button @click=\"dialogVisible = false\">Clear</el-button>\n                </span>\n            </el-dialog>\n        </div>\n        <div class=\"depend-info\" v-if=\"isShowTable\">\n            <div class=\"excel-button\">\n                <el-form\n                    :inline=\"true\"\n                    class=\"form\">\n                    <a class=\"form-button\" @click=\"excelDownload\" ref=\"download\">\n                        <img src=\"@/assets/images/dowmload.svg\" alt=\"\">\n                        Export Excel\n                    </a>\n                </el-form>\n            </div>\n            <div class=\"package-table\">\n                <div class=\"pkg-tables\">\n                    <div class=\"table-content binary\">\n                        <h4>Binary Package List</h4>\n                        <ul class=\"table-title binary\">\n                            <li>\n                                <a>Binary Name\n                                    <img class=\"filter\" src=\"@/assets/images/depend/filterSearch.svg\" @click=\"clickFilter('binary')\">\n                                </a>\n                                <div class=\"table-select\" v-if=\"isShowBinary\">\n                                    <el-row class=\"table-autocomplete\">\n                                        <el-col>\n                                            <el-autocomplete\n                                                class=\"inline-input\"\n                                                v-model=\"stateBinary\"\n                                                :fetch-suggestions=\"querySearchBinary\"\n                                                placeholder=\"Search\"\n                                                :trigger-on-focus=\"false\"\n                                                @select=\"handleSelectBinary\"\n                                            ></el-autocomplete>\n                                        </el-col>\n                                    </el-row>\n                                </div>\n                            </li>\n                            <li>Source Name</li>\n                            <li>Version</li>\n                            <li>Database</li>\n                        </ul>\n                        <el-scrollbar class=\"scrollbar\">\n                            <ul class=\"table-item binary\" v-for=\"(item, index) in binaryList\" :key=\"index\">\n                                <li class=\"table-name\" :title=\"item.binary_name\"><a @click=\"drawNodeGraph(item.binary_name, 'binary')\">{{ item.binary_name }}</a></li>\n                                <li class=\"table-name\" :title=\"item.source_name\">{{ item.source_name }}</li>\n                                <li>{{ item.version }}</li>\n                                <li>{{ item.database }}</li>\n                            </ul>\n                        </el-scrollbar>\n                    </div>\n                    <div class=\"table-content source\">\n                        <h4>Source Package List</h4>\n                        <ul class=\"table-title source\">\n                            <li>\n                                <a>Source Name\n                                    <img class=\"filter\" src=\"@/assets/images/depend/filterSearch.svg\" @click=\"clickFilter('source')\"></a>\n                                <div class=\"table-select\"  v-if=\"isShowSource\">\n                                    <el-row class=\"table-autocomplete\">\n                                        <el-col>\n                                            <el-autocomplete\n                                                class=\"inline-input\"\n                                                v-model=\"stateSource\"\n                                                :fetch-suggestions=\"querySearchSource\"\n                                                placeholder=\"Search\"\n                                                :trigger-on-focus=\"false\"\n                                                @select=\"handleSelectSource\"\n                                            ></el-autocomplete>\n                                        </el-col>\n                                    </el-row>\n                                </div>\n                            </li>\n                            <li>Version</li>\n                            <li>Database</li>\n                        </ul>\n                        <el-scrollbar class=\"scrollbar\">\n                            <ul class=\"table-item source\" v-for=\"(item, index) in sourceList\" :key=\"index\">\n                                <li class=\"table-name\" :title=\"item.source_name\">\n                                    <a @click=\"drawNodeGraph(item.source_name, 'source')\">{{ item.source_name }}</a>\n                                </li>\n                                <li>{{ item.version }}</li>\n                                <li>{{ item.database }}</li>\n                            </ul>\n                        </el-scrollbar>\n                    </div>\n                    <div class=\"table-content statis\">\n                        <h4>Statistics</h4>\n                        <ul class=\"statis\">\n                            <li>database</li>\n                            <li>binarySum</li>\n                            <li>sourceSum</li>\n                        </ul>\n                        <ul class=\"statis\" v-for=\"(item, index) in statistics\" :key=\"index\">\n                            <div v-if=\"item.sum\">\n                                <li>{{ item.sum }}</li>\n                                <li>{{ item.binarys_sum }}</li>\n                                <li>{{ item.sources_sum }}</li>\n                            </div>\n                            <div v-else>\n                                <li>{{ item.database }}</li>\n                                <li>{{ item.binary_sum }}</li>\n                                <li>{{ item.source_sum }}</li>\n                            </div>\n                        </ul>\n                    </div>\n                </div>\n                <div class=\"pkg-diagram\" id=\"main\" ref=\"diagram\"></div>\n            </div>\n        </div>\n        <div class=\"depend-info-h5\">\n            <div class=\"binary-table\">\n                <h4>Binary Package List</h4>\n                <ul class=\"binary-h5\" v-for=\"(item, index) in binaryList\" :key=\"index\">\n                    <li>\n                        <span> Binary Name: </span>\n                        <a>{{ item.binary_name }}</a>\n                    </li>\n                    <li>\n                        <span>Source Name: </span>\n                        {{ item.source_name }}\n                    </li>\n                    <li>\n                        <span>Version: </span>\n                        {{ item.version }}\n                    </li>\n                    <li>\n                        <span>Database</span>\n                        {{ item.database }}\n                    </li>\n                </ul>\n            </div>\n            <div class=\"table-content source-h5\">\n                <h4>Source Package List</h4>\n                <ul class=\"table-title source\">\n                    <li>Source Name</li>\n                    <li>Version</li>\n                    <li>Database</li>\n                </ul>\n                <ul class=\"table-item source\" v-for=\"(item, index) in sourceList\" :key=\"index\">\n                    <li><a>{{ item.source_name }}</a></li>\n                    <li>{{ item.version }}</li>\n                    <li>{{ item.database }}</li>\n                </ul>\n            </div>\n            <div class=\"table-content statis-h5\">\n                <h4>Statistics</h4>\n                <ul class=\"statis\" v-for=\"(item, index) in statistics\" :key=\"index\">\n                    <li>{{ item.database }}</li>\n                    <li>{{ item.binary_sum }}</li>\n                    <li>{{ item.source_sum }}</li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport {\n    dependList,\n    dependDown,\n    dependGraph\n} from '../../api/depend';\nimport {\n    dbPriority,\n} from \"../../api/repo\";\nexport default {\n    name: \"depend-info\",\n    data () {\n        return {\n            formData: {\n                queryPkgName: [],\n                dependType: \"installdep\",\n            },\n            parameter: {\n                db_priority: [],\n                level: 'ALL',\n                search_type: ''\n            },\n            msgFlag: true,\n            subFlag: false,\n            sourceMsg: 'If this option is selected,the dependencies of the source code package are queried',\n            selfMsg: 'For the source code package:Query all build dependencies and the first level installation dependencies of each dependency package',\n            withMsg: 'If this option is not selected,the dependencies of the binary package are queried',\n            sourceMsg2: 'If this option is not selected,the dependents of the binary package are queried',\n            subMsg: 'For the binary package:Query the dependents of the binary package,the associated source code package,and other binary packages generated by the source code package',\n            searchName: \"\",\n            searchTitle: 'Please enter a binary package name',\n            currentButton: 'Install',\n            isShowBinary: false,\n            isShowSource: false,\n            isShowTable: false,\n            checkList: ['source'],\n            typeName: \"\",\n            typeLevel: 'ALL',\n            levelList: ['ALL', 1, 2, 3, 4, 5, 6 , 7, 8, 9, 10],\n            searchType: '',\n            searchBe: ['install', 'build'],\n            searchSource: false,\n            typeList: true,\n            isAll: true,\n            transData: [],\n            selectedData: [],\n            tableName: [],\n            dialogVisible: false,\n            loading: false,\n            downloadRequire: '',\n            queryNames: [],\n            stateBinary: '',\n            stateSource: '',\n            productV: [],\n            binaryList: [],\n            binaryQueryList: [],\n            sourceList: [],\n            sourceQueryList: [],\n            statistics: [],\n            Ddata: null,\n            defaultVersion: []\n        }\n    },\n    mounted() {\n        this.formData.queryPkgName = this.changePkgQueryName(this.searchName);\n        this.getDbPriority();\n    },\n    methods: {\n        sourceChange(val){\n            console.log(this.checkList);\n            console.log(this.checkList.length);\n            if(val){\n               this.msgFlag = true\n               if(this.checkList.includes('Self-build')){\n                  this.selfMsg = 'For the source code package:Query all build dependencies and the installation dependencies of each dependency package'\n               }else{\n                  this.selfMsg = 'For the source code package:Query all build dependencies and the first level installation dependencies of each dependency package'\n               }\n               this.sourceMsg = 'If this option is selected,the dependencies of the source code package are queried'\n            }else{\n               this.msgFlag = false\n               if(this.checkList.includes('Self-build')){\n                  this.selfMsg = 'For the binary package:Query all installation dependencies and the build dependencies of each dependency package'\n               }else{\n                  this.selfMsg = 'For the binary package:Query all installation dependencies and the first level build dependencies of each dependency package'\n               }\n               this.sourceMsg = 'If this option is not selected,the dependencies of the binary package are queried'\n            }\n        },\n        selfChange(val){\n            if(val){\n                if(this.msgFlag){\n                   this.selfMsg = 'For the source code package:Query all build dependencies and the installation dependencies of each dependency package'\n                }else{\n                   this.selfMsg = 'For the binary package:Query all installation dependencies and the build dependencies of each dependency package'\n                }\n            }else{\n                if(this.msgFlag){\n                   this.selfMsg = 'For the source code package:Query all build dependencies and the first level installation dependencies of each dependency package' \n                }else{\n                   this.selfMsg = 'For the binary package:Query all installation dependencies and the first level build dependencies of each dependency package'\n                }\n            }\n        },\n        withChange(val){\n            if(val){\n                this.withMsg = 'Selected:Query the dependencies of the binary package,the associated source code package,and other binary packages generated by the source code package'\n            }else{\n                this.withMsg = 'Deselected:Query only the dependencies of the binary package and the associated source code package'\n            }\n        },\n        sourceChange2(val){\n            if(val){\n                this.sourceMsg2 = 'If this option is selected,the dependents of the source code package are queried'\n                if(this.searchSource){\n                    this.subMsg = 'For the source code package:Query only the dependents of the source code package and the binary packages generated by the source code package'\n                }else{\n                    this.subMsg = 'For the source code package:Query only the dependents of the source code package'\n                }\n                this.subFlag = true\n            }else{\n                this.sourceMsg2 = 'If this option is not selected,the dependents of the binary package are queried'\n                if(this.searchSource){\n                    this.subMsg = 'For the binary package:Query the dependents of the binary package,and other binary packages generated by the source code package'\n                }else{\n                    this.subMsg = 'For the binary package:Query only the dependents of the binary package and the associated source code package'\n                }\n                this.subFlag = false\n            }\n        },\n        subChange(val){\n            if(val){\n                if(this.subFlag){\n                    this.subMsg = 'For the source code package:Query only the dependents of the source code package and the binary packages generated by the source code package'\n                }else{\n                    this.subMsg = 'For the binary package:Query the dependents of the binary package,and other binary packages generated by the source code package'\n                }\n            }else{\n                if(this.subFlag){\n                    this.subMsg = 'For the source code package:Query only the dependents of the source code package'\n                }else{\n                    this.subMsg = 'For the binary package:Query only the dependents of the binary package and the associated source code package'\n                }\n            }\n        },\n        changePkgQueryName(name) {\n            let n = [];\n            n.push(name);\n            return n;\n        },\n        searchEvent(e) {\n            var keyCode = e.keyCode;\n            if (keyCode === 13) {\n                this.initData();\n            }\n        },\n        initData() {\n            this.isAll = false;\n            this.loading = true;\n            this.isShowTable = false;\n            this.formData.queryPkgName = this.changePkgQueryName(this.searchName);\n            let current = this.currentButton.toLowerCase();\n            if(current=== 'install' || current === 'build') {\n                this.typeLevel === 'ALL' ? delete this.parameter.level : this.parameter.level =  Number(this.typeLevel);\n            } else {\n                delete this.parameter.level;\n            }\n            let required = this.updateParamter();\n            this.getdependList(required);\n        },\n        updateParamter() {\n            let required = {};\n            required.parameter = this.parameter;\n            let data = this.formData;\n            let current = this.currentButton.toLowerCase();\n            required.parameter.db_priority = this.tableName;\n            if (current === 'self') {\n                current += 'dep';\n                let checked = this.checkList;\n                required.parameter.self_build = false;\n                if (checked.includes('Self-build')) {\n                    required.parameter.self_build = true;\n                }\n                required.parameter.packtype = checked.includes('source') ? 'source' : 'binary';\n                required.parameter.with_subpack = false;\n                if (checked.includes('with-subpack')) {\n                    required.parameter.with_subpack = true;\n                }\n                required.parameter.search_type = ''\n            } else if (current !== 'bedepend') {\n                current += 'dep';\n                required.parameter.packtype = '';\n                required.parameter.search_type = '';\n                required.parameter.with_subpack = false;\n            } else {\n                current = 'bedep';\n                required.parameter.db_priority = [];\n                required.parameter.search_type = this.searchType;\n                required.parameter.db_priority.push(this.typeName);\n                required.parameter.with_subpack = this.typeList;\n                delete required.parameter.self_build;\n                required.parameter.packtype = this.searchSource ? 'source' : 'binary';\n            }\n            data.dependType = current;\n            required.queryPkgName = data.queryPkgName;\n            required.dependType = data.dependType;\n            return required\n        },\n        toggleData(current) {\n            let btnList = {\n                Install: 'getInstallData',\n                Self: 'getSelfData',\n                Build: 'getBuildData',\n                Bedepend: 'getBedependData'\n            };\n            let func = btnList[current];\n            this[func]();\n        },\n        clickButton(event) {\n            let text = event.currentTarget.innerHTML;\n            text = text.split(' ', 1)[0];\n            this.currentButton = text;\n            this.typeLevel = 'ALL';\n            if (text === 'Install') {\n                this.searchTitle = 'Please enter a binary package name';\n            }else if (text === 'Self') {\n                this.searchTitle = 'Please enter a source/binary package name';\n            } else {\n                this.searchTitle = 'Please enter a source package name';\n            }\n            this.isShowTable = false;\n\n            this.getDbPriority();\n        },\n        clickFilter(filter) {\n            if (filter === 'binary') {\n                this.isShowBinary = !this.isShowBinary;\n            } else {\n                this.isShowSource = !this.isShowSource;\n            }\n        },\n        initDraw() {\n            let _self = this;\n            let echarts = require('echarts');\n            let id = this.$refs.diagram;\n            let myChart = echarts.init(id);\n            let data = this.Ddata;\n            let option = {\n                animationDurationUpdate: 1500,\n                animationEasingUpdate: 'quinticInOut',\n                series : [\n                    {\n                        type: 'graph',\n                        layout: 'none',\n                        edgeSymbol: ['none', 'arrow'],\n                        hoverAnimation: false,\n                        data: data.nodes.map(function (node) {\n                            return {\n                                x: node.x,\n                                y: node.y,\n                                id: node.id,\n                                name: node.label,\n                                symbolSize: node.size,\n                                edgeSymbol: ['arrow'],\n                                itemStyle: {\n                                    color: node.color\n                                }\n                            };\n                        }),\n                        edges: data.edges.map(function (edge) {\n                            return {\n                                source: edge.sourceID,\n                                target: edge.targetID\n                            };\n                        }),\n                        emphasis: {\n                            label: {\n                                position: 'right',\n                                show: true\n                            }\n                        },\n                        roam: true,\n                        focusNodeAdjacency: true,\n                        lineStyle: {\n                            width: 0.5,\n                            curveness: 0.3,\n                            opacity: 0.7\n                        },\n                    }\n                ],\n            };\n            myChart.setOption(option);\n            myChart.off('click');\n            myChart.on('click', function (params) {\n                let current = params.data.id;\n                _self.formData.node_name = current;\n                _self.getGraphData(true, 'binary');\n            });\n        },\n        drawNodeGraph(value, isSource) {\n            this.formData.node_name = value;\n            this.loading = true;\n            this.getGraphData(true, isSource);\n        },\n        excelDownload() {\n            this.loading = true;\n            let listRes = this.formData;\n            listRes.parameter = this.parameter;\n            this.getdependDown(listRes);\n        },\n        transSelect() {\n            this.dialogVisible = false;\n            let keys = this.selectedData;\n            let t = '';\n            let tableList = [];\n            keys.forEach(key => {\n                t += ' ' + key + ' >';\n                tableList.push(key);\n            });\n            t = t.slice(0, t.length - 1);\n            this.$refs.transTitle.innerHTML = t;\n            this.tableName = tableList;\n        },\n        washTableData(data) {\n            let newData = [];\n            let keys = Object.keys(data);\n            for (let key of keys) {\n                let item = {};\n                item.id = data[key];\n                item.fileName = data[key];\n                newData.push(item);\n            }\n            return newData;\n        },\n        filterTableData(data, key, keyword) {\n            data = data.filter(item => item[key] === keyword);\n            if (key.includes('binary')) {\n                this.binaryList = data;\n            } else {\n                this.sourceList = data;\n            }\n        },\n        autocompleteData(data, valueName) {\n            let result = [];\n            data.forEach(item => {\n                let el = {};\n                el.value = item[valueName];\n                result.push(el);\n            });\n            return result;\n        },\n        querySearchBinary(queryString, cb) {\n            let queryNames = this.autocompleteData(this.binaryQueryList, \"binary_name\");\n            let results = queryString ? queryNames.filter(this.createFilter(queryString)) : queryNames;\n            cb(results);\n        },\n        querySearchSource(queryString, cb) {\n            let queryNames = this.autocompleteData(this.sourceQueryList, \"source_name\");\n            let results = queryString ? queryNames.filter(this.createFilter(queryString)) : queryNames;\n            cb(results);\n        },\n        createFilter(queryString) {\n            return (queryName) => {\n                return (queryName.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n            };\n        },\n        handleSelectBinary(item) {\n            let binaryList = this.binaryQueryList;\n            this.filterTableData(binaryList, 'binary_name', item.value);\n            this.loadAll(binaryList, 'binary_name');\n\n        },\n        handleSelectSource(item) {\n            let sourceList = this.sourceQueryList;\n            this.filterTableData(this.sourceQueryList, 'source_name', item.value);\n            this.loadAll(sourceList, 'source_name');\n        },\n        loadAll(value, valueName) {\n            let result = this.autocompleteData(value, valueName);\n            this.queryNames = result;\n        },\n        getdependList(require) {\n            dependList(require)\n                .then(response => {\n                    this.loading = false;\n                    if(response.code === '200') {\n                        this.isShowTable = true;\n                        this.binaryList = response.resp.binary_list;\n                        this.sourceList = response.resp.source_list;\n                        this.statistics = response.resp.statistics;\n                        this.binaryQueryList = response.resp.binary_list;\n                        this.sourceQueryList = response.resp.source_list;\n                        this.getGraphData(false);\n                        this.excelDownload();\n                    } else {\n                        this.$message.error(response.message + '\\n' + response.tip);\n                    }\n                })\n                .catch(response => {\n                    this.loading = false;\n                    this.$message.error(response.message + '\\n' + response.tip);\n                });\n        },\n        getdependDown(require) {\n            dependDown (require)\n                .then(response => {\n                    this.loading = false;\n                    let blob = response;\n                    let objectUrl = URL.createObjectURL(blob);\n                    this.$refs.download.href = objectUrl;\n                })\n                .catch(response => {\n                    this.loading = false;\n                    this.$message.error(response.message + '\\n' + response.tip);\n                });\n        },\n        getGraphData(isCLicked, isSource) {\n            let required = {};\n            required.parameter = this.parameter;\n            let data = this.formData;\n            let current = this.currentButton.toLowerCase();\n            required.parameter.db_priority = this.tableName;\n            if (current === 'self') {\n                current += 'dep';\n                let checked = this.checkList;\n                required.parameter.self_build = false;\n                if (checked.includes('Self-build')) {\n                    required.parameter.self_build = true;\n                }\n                required.parameter.packtype = checked.includes('source') ? 'source' : 'binary';\n                required.node_type = isSource ||'binary';\n                required.parameter.with_subpack = false;\n                if (checked.includes('with-subpack')) {\n                    required.parameter.with_subpack = true;\n                }\n            } else if (current !== 'bedepend') {\n                current += 'dep';\n                required.node_type = current.includes('install') ? isSource || 'binary' : isSource || 'source';\n                // required.node_type = 'binary'\n                required.parameter.packtype = '';\n                required.parameter.search_type = '';\n                required.parameter.with_subpack = false;\n            } else {\n                current = 'bedep';\n                required.parameter.db_priority = [];\n                required.parameter.search_type = this.searchType;\n                required.parameter.db_priority.push(this.typeName);\n                required.parameter.with_subpack = this.typeList;\n                delete required.parameter.self_build;\n                if (this.searchSource) {\n                    required.parameter.packtype = 'source';\n                } else {\n                    required.parameter.packtype = 'binary';\n                }\n                required.node_type = isSource ||'binary';\n            }\n            data.dependType = current;\n            required.queryPkgName = data.queryPkgName;\n            required.dependType = data.dependType;\n            if (isCLicked) {\n                required.node_name = data.node_name;\n            } else {\n                required.node_name = this.searchName;\n            }\n            dependGraph (required)\n                .then(response => {\n                    this.isShowTable = true;\n                    this.loading = false;\n                    if (response.code === '200') {\n                        this.Ddata = response.resp;\n                        this.initDraw();\n                    } else {\n                        this.$message.error(response.message + '\\n' + response.tip);\n                    }\n                })\n                .catch(response => {\n                    this.loading = false;\n                    this.$message.error(response.message + '\\n' + response.tip);\n                });\n        },\n        getDbPriority() {\n            dbPriority()\n                .then(response => {\n                    this.loading = false;\n                    if(response.code === '200') {\n                        this.transData = response.resp;\n                        this.productV = response.resp;\n                        this.defaultVersion.push(response.resp[0]);\n                        this.selectedData.pop();\n                        this.selectedData.push(response.resp[0]);\n                        this.typeName = response.resp[0];\n                        if(this.currentButton !== 'Bedepend') {\n                            this.transSelect();\n                        }\n                    } else {\n                        this.loading = false;\n                        this.$message.error(response.message + '\\n' + response.tip);\n                    }\n                })\n                .catch(response => {\n                    this.loading = false;\n                    this.$message.error(response.message + '\\n' + response.tip);\n                });\n        },\n    }\n}\n</script>\n\n<style lang=\"less\">\n.tool-tips {\n    position: absolute;\n    left: -12px;\n    top: 12px;\n}\n.el-scrollbar__wrap {\n    overflow-y: scroll !important;\n    overflow-x: hidden;\n}\n.el-loading-mask {\n    z-index: 5;\n}\n.depend {\n    margin-bottom: 120px;\n}\n.depend .el-form-item__label {\n    padding-right: 15px;\n    font-size: 16px;\n}\n.depend .el-checkbox__inner::after {\n    border: 1px solid #252C32;\n    border-left: 0;\n    border-top: 0;\n}\n.depend .el-checkbox__input.is-checked+.el-checkbox__label {\n    color: #000;\n}\n.depend .el-checkbox__inner:hover {\n    border-color: #252C32;\n}\n.depend .el-checkbox__input.is-focus .el-checkbox__inner {\n    border-color: #252C32;\n}\n.depend .el-checkbox__input.is-checked .el-checkbox__inner,\n.depend .el-checkbox__input.is-indeterminate .el-checkbox__inner {\n    background-color: #fff;\n    border-color: #252C32;\n}\n.depend .el-checkbox__label {\n    font-size: 16px;\n}\n.depend .el-transfer-panel:last-child .el-transfer-panel__item {\n    color: #002fa7\n}\n.depend-search .el-input__icon,\n.depend-type .el-input__inner {\n    height: 30px;\n}\n.depend-search .el-input__icon,\n.depend-type .el-input__icon {\n    line-height: 30px;\n}\n.depend-search .el-form--inline .el-form-item {\n    height: 30px;\n    line-height: 40px;\n    margin-right: 0;\n}\n.depend-search .el-form.el-form--inline {\n    display: inline-block;\n}\n.el-select .el-input.is-focus .el-input__inner {\n    border-color: #002fa7;\n}\n.el-select-dropdown.is-multiple .el-select-dropdown__item.selected {\n    color: #002fa7;\n}\n.el-select-dropdown__list .el-select-dropdown__item {\n    display: block;\n}\n.el-select-dropdown__item.selected {\n    color: #002fa7;\n}\n.el-select .el-input__inner:focus {\n    border-color: #002fa7;\n}\n.el-select-dropdown__list li:first-child {\n    margin-left: 0!important;\n}\n.dialog-footer .el-button {\n    display: inline-block;\n    width: 80px;\n    height: 40px;\n}\n.dialog-footer .el-button--primary {\n    background: #002fa7;\n}\n.dialog-footer .el-button--default {\n    border: 1px solid rgba(0, 0, 0, 0.5);\n}\n.dialog-footer .el-button--default:hover {\n    color: #000;\n    background: #fff;\n}\n.click-transfer .el-dialog--center .el-dialog__body {\n    text-align: center;\n}\n.click-transfer .el-transfer-panel {\n    text-align: left;\n}\n.click-transfer .el-transfer-panel__item:hover {\n    color: #002fa7;\n}\n@media screen and (max-width: 1000px){\n    .product-v .el-form-item__label {\n        display: none;\n    }\n    .depend .el-checkbox__label {\n        font-size: 14px;\n    }\n    .depend .el-checkbox__input.is-checked + .el-checkbox__label {\n        color: rgba(0, 0, 0, 0.5);\n    }\n    .el-checkbox {\n        margin-right: 20px;\n    }\n}\n</style>\n<style scoped>\n/deep/.el-transfer-panel{\n    display:inline-block;\n    width: 270px!important;\n    height:100%;\n}\n.checked-explain{\n    position: relative;\n    top: 2px;\n    left: -26px;\n}\n.bottom-explain{\n    position: relative;\n    top: 4px;\n    left: 4px;\n}\n.item{\n    position: relative;\n    left: -31px;\n    top: 2px;\n}\n.click-transfer>p{\n    display: inline-block;\n}\nh4 {\n    font-size: 20px;\n    font-family: Roboto-Bold, Roboto;\n    font-weight: bold;\n    margin-bottom: 20px;\n}\nbutton {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    outline: none;\n    background: none;\n}\nul {\n    width: 530px;\n    height: 60px;\n    line-height: 60px;\n}\nul:nth-child(even) {\n    background-color: rgba(0, 0, 0, 0.05);\n}\nli {\n    display: inline-block;\n}\nli:first-child {\n    margin-left: 20px;\n}\n.depend-type span {\n    margin-right: 30px;\n}\n.type-btns {\n    display: inline-block;\n    margin-bottom: 25px;\n    line-height: 32px;\n}\n.type-btns button {\n    width: 140px;\n    height: 30px;\n    padding: 5px 0;\n    font-size: 16px;\n    border: 1px solid #B8BECC;\n    border-right: none;\n}\n.type-btns button:first-child {\n    border-radius: 4px 0px 0px 4px;\n}\n.type-btns button:last-child {\n    border-right: 1px solid #B8BECC;\n    border-radius: 0px 4px 4px 0px;\n}\n.type-btns .active {\n    background: #002FA7;\n    color: #fff;\n    border: 1px solid #002FA7;\n}\n.type-radio {\n    display: inline-block;\n    margin-left: 25px;\n}\n.self-checkBox {\n    display: inline-block;\n    margin-left: 55px;\n}\n.pc-search {\n    width: 562px;\n}\n.pc-select {\n    width: 500px;\n}\n.pc-search,\n.pc-select {\n    display: inline-block;\n    margin-left: 20px;\n}\n.icon-search {\n    cursor: pointer;\n}\n.mobile-search,\n.mobile-select {\n    display: none;\n}\n.searching {\n    display: block;\n}\n#package-diagram {\n    width: 600px;\n    height: 600px;\n}\n.depend-info-h5 {\n    display: none;\n}\n.table-item .table-name {\n    cursor: pointer;\n}\n.binary li {\n    width: 24%;\n    height: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n.statis li,\n.source li {\n    width: 32%;\n    height: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n.self-checkBox {\n    display: none;\n}\n.self-checkBox.show {\n    display: inline-block;\n}\n.be-select {\n    display: none;\n    margin-left: 50px;\n}\n.be-select.show {\n    display: inline-block;\n}\n.be-select.source {\n    /* height: 40px; */\n}\n.filter {\n    width: 14px;\n    height: 14px;\n    vertical-align: middle;\n    cursor: pointer;\n}\n.table-title {\n    position: relative;\n}\n.table-item {\n    font-family: Roboto-Light;\n}\n.table-item a {\n    color: #002fa7;\n}\n.table-select {\n    position: absolute;\n    top: 50px;\n    left: 120px;\n    line-height: 30px;\n    z-index: 1;\n}\n.table-content {\n    margin-top: 35px;\n}\n.table-content .scrollbar {\n    width: 530px;\n    height: 280px;\n}\n.depend-info {\n    margin-top: 15px;\n    border-top: 1px solid rgba(0, 0, 0, 0.5);\n}\n.excel-button {\n    float: right;\n}\n.form-button {\n    display: inline-block;\n    text-decoration: none;\n    color: #000;\n    height: 30px;\n    line-height: 30px;\n    border-radius: 4px;\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    padding: 0 20px;\n    cursor: pointer;\n    margin-top: 25px;\n}\n.form-button img {\n    width: 19px;\n    height: 15px;\n}\n.table-content.binary {\n    margin-top: 75px;\n}\n.click-transfer {\n    height: 45px;\n    line-height: 40px;\n    margin-bottom: 22px;\n}\n.click-btn {\n    color: #002fa7;\n    font-size: 16px;\n}\n.package-table {\n    position: relative;\n}\n.pkg-diagram {\n    width: 600px;\n    height: 846px;\n    position: absolute;\n    right: 0;\n    top: 0;\n}\n@media screen and (max-width: 1000px) {\n    .is-pc {\n        display: none;\n    }\n    .pc-search,\n    .pc-select {\n        display: none;\n    }\n    .mobile-search,\n    .mobile-select {\n        display: block;\n        width: 315px;\n    }\n    .excel-button {\n        display: none;\n    }\n    .h5-type {\n        display: none;\n    }\n    .searching {\n        display: none;\n    }\n    .click-transfer {\n        display: none;\n    }\n    ul {\n        width: 100%;\n        height: unset;\n        font-size: 12px;\n        font-family: Roboto-Light;\n    }\n    li {\n        margin-left: 20px;\n    }\n    li a {\n        color: #002fa7;\n    }\n    h4 {\n        font-size: 16px;\n    }\n    .depend-info-h5 {\n        margin-top: 40px;\n        display: block;\n    }\n    .binary-h5 {\n        padding: 20px 0;\n    }\n    .binary-h5:nth-child(even) {\n        background-color: rgba(0, 0, 0, 0.05);\n    }\n    .binary-h5:nth-child(odd) {\n        background-color: #fff;\n    }\n    .binary-h5 li {\n        display: block;\n        height: 30px;\n        line-height: 30px;\n    }\n    .binary-h5 li span {\n        display: inline-block;\n        width: 85px;\n        font-size: 12px;\n        font-family: Roboto-Regular;\n    }\n    .statis li {\n        width: 26%;\n    }\n    .source li {\n        width: 26.8%\n    }\n    .statis-h5 ul{\n        font-size: 14px;\n        font-family: Roboto-Regular;\n        line-height: 40px;\n        background-color: rgba(0, 0, 0, 0.05);\n    }\n    .table-title {\n        font-size: 14px;\n        font-family: Roboto-Regular;\n    }\n    .pkg-diagram {\n        width: 100%;\n        height: 600px;\n    }\n    .type-btns button {\n        font-size: 12px;\n        width: 78px;\n        font-family: Roboto-Condensed;\n    }\n    .type-btns button:last-child {\n        width: 64px;\n    }\n    .type-btns button:nth-child(3){\n        width: 95px;\n    }\n    .depend-info {\n        border: none;\n        display: none;\n    }\n    .self-checkBox {\n        margin-left: 0;\n    }\n    .package-container label {\n        font-size: 14px;\n        font-family: Roboto-Light;\n    }\n    .be-select {\n        margin-left: 0;\n    }\n    .type-select {\n        width: 105px;\n    }\n    .type-radio {\n        margin-left: 35px;\n    }\n    .be-select {\n        margin-bottom: 20px;\n    }\n}\n</style>"]}]}