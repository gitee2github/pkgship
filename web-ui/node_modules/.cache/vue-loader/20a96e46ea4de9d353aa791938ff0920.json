{"remainingRequest":"/home/pkgship/web-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pkgship/web-ui/src/components/LineChart.vue?vue&type=style&index=0&id=6760596c&scoped=true&lang=css&","dependencies":[{"path":"/home/pkgship/web-ui/src/components/LineChart.vue","mtime":1650610401467},{"path":"/home/pkgship/web-ui/node_modules/css-loader/dist/cjs.js","mtime":1650610399631},{"path":"/home/pkgship/web-ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1650610401303},{"path":"/home/pkgship/web-ui/node_modules/postcss-loader/src/index.js","mtime":1650610400663},{"path":"/home/pkgship/web-ui/node_modules/cache-loader/dist/cjs.js","mtime":1650610399395},{"path":"/home/pkgship/web-ui/node_modules/vue-loader/lib/index.js","mtime":1650610401303}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY29udGFpbmVyewogICAgLyogZGlzcGxheTogZmxleCFpbXBvcnRhbnQ7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlciFpbXBvcnRhbnQ7CiAgICBhbGlnbi1pdGVtczogY2VudGVyIWltcG9ydGFudDsgKi8KICAgIHdpZHRoOiAxMDAwcHg7CiAgICBoZWlnaHQ6IDUwMHB4Owp9Cg=="},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LineChart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n     <!-- <span>12345</span> -->\n     <div class=\"container\" :id=\"linecharts\"></div>\n  </div>\n</template>\n\n<script>\nexport default {\n    name: 'LineChart',\n    props: {\n      title: {\n        type: String,\n        default: ''\n      },\n      xAxisData: {\n        type: Array,\n        default:() => []\n      },\n      linedata: {\n        type: Array,\n        default:() => []\n      }\n    },\n    data (){\n      return {\n        timer: null\n      }\n    },\n    methods: {\n        drawPie(){\n          this.charts = this.$echarts.init(document.getElementById(this.linecharts))\n          this.charts.setOption({\n              title: {\n               text: this.title,\n               left: \"center\",\n               top: \"bottom\"\n              },\n              tooltip: {\n               trigger: 'axis',\n              //  formatter: function(params){\n              //    if (params.data === 0) {\n              //     const msg = 'failed'\n              //    } else {\n              //     const msg = 'success'\n              //    }\n              //    return \n              //  }\n              },\n              toolbox: {\n               feature: {\n                 saveAsImage: {}\n               }\n              },\n              xAxis: {\n                name: '天数',\n                type: 'category',\n                data: this.xAxisData\n              },\n              yAxis: {\n                name: '时间',\n                type: 'value',\n                axisLabel:{\n                  formatter: '{value}s'\n                }\n              },\n              series: [\n                { \n                  itemStyle : {  \n                                normal : {  \n                                    color: function(params) {\n                                      //自定义折线点颜色\n                                      if(params.data === 0){\n                                        return '#ed1941'\n                                      } else {\n                                        return '#1d953f'\n                                      }\n                                    },\n                                    lineStyle:{  \n                                        color:'#6950a1'  \n                                    }  \n                                }  \n                              }, \n                  data: this.linedata,\n                  type: 'line'\n                }\n              ]\n          })\n        }\n    },\n    computed: {\n        linecharts(){\n            return 'linecharts' + Math.random()*5000\n        }\n    },\n    mounted () {\n        this.$nextTick(function() {\n            this.drawPie();\n        });\n    },\n    created () {\n      console.log(this.linedata);\n    },\n    beforeDestroy() {\n      this.$emit('closepop');\n    }\n}\n</script>\n\n<style scoped>\n  .container{\n      /* display: flex!important;\n      justify-content: center!important;\n      align-items: center!important; */\n      width: 1000px;\n      height: 500px;\n  }\n</style>"]}]}